generator client {
   provider = "prisma-client-js"
}

datasource db {
   provider = "postgresql"
   url      = env("DATABASE_URL")
   // directUrl = env("POSTGRES_URL_NON_POOLING")
}

model User {
   id          Int           @id @default(autoincrement())
   name        String
   email       String
   password    String
   phone       String
   Certificate Certificate[]
   EventUser   EventUser[]
   histories   History[]
}

model Event {
   id           Int           @id @default(autoincrement())
   name         String?
   place        String?
   link         String?
   status       String?
   image        String?
   descriptions String?
   reasons      String?
   notes        String?
   date         String?
   time         String?
   details      String?
   Certificate  Certificate[]
   EventUser    EventUser[]
   histories    History[]
   Speaker      Speaker[]     @relation("EventToSpeakers")
}

model Speaker {
   id               Int     @id @default(autoincrement())
   speakerName      String?
   speakerImage     String?
   speakerBiography String?
   speakerPosition  String?
   eventId          Int?
   Event            Event?  @relation("EventToSpeakers", fields: [eventId], references: [id])
}

model History {
   id       Int      @id @default(autoincrement())
   userId   Int
   eventId  Int
   joinetAt DateTime @default(now())
   event    Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
   user     User     @relation(fields: [userId], references: [id], onDelete: Cascade)

   @@unique([userId, eventId])
}

model Certificate {
   id        Int      @id @default(autoincrement())
   userId    Int
   eventId   Int
   url       String
   createdAt DateTime @default(now())
   updatedAt DateTime @updatedAt
   event     Event    @relation(fields: [eventId], references: [id], onDelete: Cascade)
   user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Report {
   id        Int      @id @default(autoincrement())
   title     String
   body      String
   image     String
   author    String
   url       String?
   createdAt DateTime @default(now()) @db.Timestamp(6)
}

model EventUser {
   id      Int   @id @default(autoincrement())
   userId  Int
   eventId Int
   Event   Event @relation(fields: [eventId], references: [id])
   User    User  @relation(fields: [userId], references: [id])

   @@unique([userId, eventId])
}
